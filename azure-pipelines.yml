trigger:
  - master

variables:
  - group: mebs-pipieline-secrets

pool:
  vmImage: ubuntu-latest

parameters:
  - name: heroku
    displayName: Install Heroku
    type: boolean
    default: true
  - name: tf_apply
    displayName: Apply Terraform
    type: boolean
    default: true

resources:
  repositories:
    - repository: mebs
      type: github
      endpoint: cecheta
      name: cecheta/mebs

steps:
  - checkout: self
  - checkout: mebs
  - script: curl https://cli-assets.heroku.com/install.sh | sh
    displayName: Install Heroku
    condition: eq(${{ parameters.heroku }}, true)
  - script: |
      curl https://releases.hashicorp.com/terraform/1.0.7/terraform_1.0.7_linux_amd64.zip -o terraform_1.0.7_linux_amd64.zip
      unzip terraform_1.0.7_linux_amd64.zip
      mv terraform /usr/local/bin/
    displayName: Install Terraform
  - script: |
      export DATABASE_URL=$(heroku config:get DATABASE_URL --app cecheta-mebs-backend)
      terraform init -backend-config="conn_str=$DATABASE_URL"
    displayName: Terraform Init
    workingDirectory: $(System.DefaultWorkingDirectory)/mebs-infrastructure
    env:
      HEROKU_API_KEY: $(HEROKU_API_KEY)
      HEROKU_EMAIL: $(HEROKU_EMAIL)
  - script: terraform plan -out tfplan
    displayName: Terraform Plan
    workingDirectory: $(System.DefaultWorkingDirectory)/mebs-infrastructure
    env:
      HEROKU_API_KEY: $(HEROKU_API_KEY)
      HEROKU_EMAIL: $(HEROKU_EMAIL)
      TF_VAR_spotify_client_id: $(SPOTIFY_CLIENT_ID)
      TF_VAR_spotify_client_secret: $(SPOTIFY_CLIENT_SECRET)
      TF_VAR_mongodb_url: $(MONGODB_URL)
  - script: terraform apply tfplan
    displayName: Terraform Apply
    workingDirectory: $(System.DefaultWorkingDirectory)/mebs-infrastructure
    env:
      HEROKU_API_KEY: $(HEROKU_API_KEY)
      HEROKU_EMAIL: $(HEROKU_EMAIL)
      TF_VAR_spotify_client_id: $(SPOTIFY_CLIENT_ID)
      TF_VAR_spotify_client_secret: $(SPOTIFY_CLIENT_SECRET)
      TF_VAR_mongodb_url: $(MONGODB_URL)
    condition: eq(${{ parameters.tf_apply }}, true)
